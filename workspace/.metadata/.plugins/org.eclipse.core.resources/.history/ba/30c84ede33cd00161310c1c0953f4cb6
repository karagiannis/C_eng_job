/*
 * sensor_class.h
 *
 *  Created on: 28 dec 2016
 *      Author: root
 */

#ifndef SENSOR_CLASS_H_
#define SENSOR_CLASS_H_

#include "queue.h"

typedef struct SENSOR_CLASS SENSOR_OBJECT;


struct SENSOR_CLASS {
    char description[80];
    alt_u32 x_origo;
    alt_u32 y_origo;
    alt_u32 time_base;
    alt_u32 normalization_factor;
    alt_u32 offset;
    alt_u32 rgb;
    QUEUE queue;
    QUEUE *q;
    void (*configure_time_base)(alt_u32, void*);
    void (*init_measurement)(void*);
    void (*read_sensor)(QUEUE*);
    void (*update_graph)(void*);
    void *this;
    void (*draw_graph)(void*);
};

void config_time_base(alt_u32, SENSOR_OBJECT*);
void init_measurement(SENSOR_OBJECT*);
void read_accelerometerX(QUEUE *);
void update_graph(SENSOR_OBJECT*);
void draw_graph(SENSOR_OBJECT*);
//void read_accelerometerY(QUEUE *q);
//void read_accelerometerZ(QUEUE *q);
void read_temp(QUEUE *q);
void read_light(QUEUE *q);
void queue_print_screen(QUEUE *q, int x_origo, int y_origo, int normalization, int offset, int rgb, SENSOR_OBJECT *sensor_obj);

unsigned int i2bcd(unsigned int i);
void update_time(unsigned int i);
#endif /* SENSOR_CLASS_H_ */
