/*
 * sensor.h
 *
 *  Created on: 28 dec 2016
 *      Author: root
 */

#ifndef SENSOR_H_
#define SENSOR_H_

#define QUEUESIZE 10


typedef struct myQUEUE
{
    int items[QUEUESIZE];
    int rindex;
    int windex;
    int numitems;
}QUEUE;

void queue_init(QUEUE *q);
int queue_enqueue(QUEUE *q,int item);
int queue_dequeue(QUEUE *q);
void queue_print(QUEUE *q);



typedef struct SENSOR_CLASS SENSOR_OBJECT;


struct SENSOR_CLASS {
    char description[80];
    alt_u32 x_origo;
    alt_u32 y_origo;
    alt_u32 time_base;
    alt_u32 normalization_factor;
    alt_u32 offset;
    alt_u32 rgb;
    QUEUE queue;
    QUEUE *q;
    void (*configure_time_base)(alt_u32, void*);
    void (*init_measurement)(void*);
    void (*read_sensor)(QUEUE*);
    void (*update_graph)(void*);
    void *this;
    void (*draw_graph)(void*);
};


#endif /* SENSOR_H_ */
